#!/usr/bin/env python
import rospy
from nav_msgs.msg import Path
from geometry_msgs.msg import PoseStamped
import numpy as np
    
def turtlebot_pathpublisher():
    pub = rospy.Publisher('path_topic', Path, queue_size=10)
    rospy.init_node('turtlebot_pathpublisher', anonymous=True)
    rate = rospy.Rate(10) # 10hz
        
    path_msg = Path()
    pose_list = []

    # Create sample path
    x = np.linspace(0, 10, num=50)
    y = np.sin(x)
    
    # Fill the PoseStamped message with the x,y coordinates
    for i in range(len(x)):
        pose = PoseStamped()
        pose.pose.position.x = x[i]
        pose.pose.position.y = y[i]
        pose_list.append(pose)

    # Fill the Path message with the PoseStamped messages
    path_msg.header.stamp = rospy.Time.now()
    path_msg.poses = pose_list

    while not rospy.is_shutdown():
        pub.publish(path_msg)
        rate.sleep()

if __name__ == '__main__':
    try:
        turtlebot_pathpublisher()
    except rospy.ROSInterruptException:
        pass

#This code creates a ROS node called "turtlebot_pathpublisher" that publishes an array of x and y coordinates to a custom topic
#called "path_topic" at a rate of 10Hz.
#The coordinates are represented as a 2D array and are converted into a Float32MultiArray message before publishing.